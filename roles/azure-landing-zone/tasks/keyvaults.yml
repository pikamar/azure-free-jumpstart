---
- name: Reload Runtime Variables
  include_vars: dir=vars files_matching=.*.runtime.yml

- name: Print Keyvault variables
  debug:
    msg: |
      --------------------------------
      Keyvault RG:          {{ resourcegroup[ item.value.resource_group_key ].name }}
      Keyvault Name:        {{ item.value.vault_name }}
      Keyvault SKU:         {{ item.value.sku }}
      ================================
  with_dict: "{{ keyvault }}"

- name: Key Vault Action [{{ keyvault_state }}]
  azure_rm_keyvault:
    resource_group: "{{ resourcegroup[ item.value.resource_group_key ].name }}"
    vault_name: "{{ item.value.vault_name }}"
    enable_soft_delete: "{{ item.value.enable_soft_delete  | default(no) }}"
    enabled_for_deployment: "{{ item.value.enabled_for_deployment  | default(no) }}"
    enabled_for_disk_encryption : "{{ item.value.enabled_for_disk_encryption  | default(no) }}"
    enabled_for_template_deployment: "{{ item.value.enabled_for_template_deployment  | default(no) }}"
    recover_mode: "{{ item.value.recover_mode  | default(no) }}"
    sku: "{{ item.value.sku }}"
    state: "{{ keyvault_state | default('present') }}"
    vault_tenant: "{{ ansible_env['AZURE_TENANT'] | default(global_settings.azure.tenent ) }}"
    access_policies: "{{ item.value.access_policies }}"
  with_dict: "{{ keyvault }}"

- name: Configure Key Vault Diagnostics
  azure_rm_resource:
    api_version: '2021-05-01-preview'
    resource_group: "{{ resourcegroup[ item.value.resource_group_key ].name }}"
    provider: KeyVault
    resource_type: vaults
    resource_name: "{{ item.value.vault_name }}/providers/Microsoft.Insights/diagnosticSettings/KeyVault-Diagnostics"
    body:
      properties:
        logs:
        - categoryGroup: allLogs
          enabled: true
        workspaceId: "{{ workspaceId }}"
  when: keyvault_state == "present"
  with_dict: "{{ keyvault }}"

- name: Get Key Vault info
  azure_rm_resource_info:
    api_version: '2021-05-01-preview'
    resource_group: "{{ resourcegroup[ item.value.resource_group_key ].name }}"
    provider: KeyVault
    resource_type: vaults
    resource_name: "{{ item.value.vault_name }}/providers/Microsoft.Insights/diagnosticSettings/KeyVault-Diagnostics"
  register: kvault_info
  when: az_kv_debug is defined and az_kv_debug == true and keyvault_state == present
  with_dict: "{{ keyvault }}"

- debug:
    var: kvault_info
  when: az_kv_debug is defined and az_kv_debug == true and keyvault_state == present
